name: Terraform Storage CI/CD

on:
  push:
    branches:
      - main
      - feature/*
    paths:
      - 'terraform-storage-module/**'
  pull_request:
    branches:
      - main
    paths:
      - 'terraform-storage-module/**'

env:
  ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
  ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
  ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
  TF_CLOUD_ORGANIZATION: succpinn-solutions-azure-policy

jobs:
  terraform-plan:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/heads/feature/')
    environment: development

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: 1.x
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

    - name: Terraform Init
      id: init
      run: terraform init
      working-directory: ./terraform-storage-module

    - name: Terraform Validate
      id: validate
      run: terraform validate
      working-directory: ./terraform-storage-module

    - name: Terraform Plan
      id: plan
      run: terraform plan -no-color -input=false
      working-directory: ./terraform-storage-module
      continue-on-error: true

    - name: Comment PR with Plan
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          const output = `#### Terraform Plan ðŸ“–\`${{ steps.plan.outcome }}\`

          <details><summary>Show Plan</summary>

          \`\`\`terraform
          ${{ steps.plan.outputs.stdout }}
          \`\`\`

          </details>

          *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;

          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: output
          })

  terraform-apply:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    environment: production
    needs: []

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: 1.x
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

    - name: Terraform Init
      id: init
      run: terraform init
      working-directory: ./terraform-storage-module

    - name: Terraform Validate
      id: validate
      run: terraform validate
      working-directory: ./terraform-storage-module

    - name: Terraform Plan
      id: plan
      run: terraform plan -no-color -input=false
      working-directory: ./terraform-storage-module

    - name: Terraform Apply
      id: apply
      run: terraform apply -auto-approve -input=false
      working-directory: ./terraform-storage-module
      continue-on-error: true

    - name: Terraform Apply Status
      if: steps.apply.outcome == 'failure'
      run: |
        echo "Terraform Apply failed as expected due to Azure Policy restriction!"
        echo "This demonstrates that the policy is working correctly."
        exit 0

